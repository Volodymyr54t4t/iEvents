// üîß –í–∏–∑–Ω–∞—á–∞—î–º–æ, –¥–µ –∑–∞—Ä–∞–∑ –∑–∞–ø—É—â–µ–Ω–∏–π —Å–∞–π—Ç ‚Äî –ª–æ–∫–∞–ª—å–Ω–æ —á–∏ –æ–Ω–ª–∞–π–Ω
let BASE_URL
if (window.location.hostname === "localhost") {
  // üñ•Ô∏è –õ–æ–∫–∞–ª—å–Ω–∏–π —Ä–µ–∂–∏–º
  BASE_URL = "http://localhost:3000"
} else {
  // ‚òÅÔ∏è –û–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–µ—Ä Render
  BASE_URL = "https://ievents-qf5k.onrender.com"
}
console.log("üì° –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ:", BASE_URL)

const userId = localStorage.getItem("userId")

if (!userId || userId === "undefined" || userId === "null") {
  console.error("Invalid userId, redirecting to auth")
  window.location.href = "auth.html"
}

let avatarFile = null

async function loadProfile() {
  try {
    const response = await fetch(`${BASE_URL}/api/profile/${userId}`)
    const data = await response.json()

    if (response.ok && data.profile) {
      const profile = data.profile
      document.getElementById("firstName").value = profile.first_name || ""
      document.getElementById("lastName").value = profile.last_name || ""
      document.getElementById("middleName").value = profile.middle_name || ""
      document.getElementById("telegram").value = profile.telegram || ""
      document.getElementById("phone").value = profile.phone || ""
      document.getElementById("birthDate").value = profile.birth_date || ""
      document.getElementById("city").value = profile.city || ""
      document.getElementById("school").value = profile.school || ""
      document.getElementById("grade").value = profile.grade || ""
      document.getElementById("interests").value = profile.interests || ""
      document.getElementById("bio").value = profile.bio || ""

      const avatarPreview = document.getElementById("avatarPreview")
      if (profile.avatar) {
        console.log("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:", profile.avatar)
        const avatarUrl = `${profile.avatar}?t=${Date.now()}`
        avatarPreview.innerHTML = `<img src="${avatarUrl}" alt="Avatar" onerror="console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∞'); this.parentElement.innerHTML='<span class=\\'avatar-placeholder\\'>üì∑</span>'">`
      } else {
        console.log("–ê–≤–∞—Ç–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
        avatarPreview.innerHTML = '<span class="avatar-placeholder">üì∑</span>'
      }

      const roleValue = document.getElementById("roleValue")
      const userRole = localStorage.getItem("userRole") || "—É—á–µ–Ω—å"
      roleValue.textContent = userRole
    } else {
      console.error("Failed to load profile:", data.error)
    }
  } catch (error) {
    console.error("Error loading profile:", error)
  }
}

document.getElementById("avatarInput").addEventListener("change", (e) => {
  const file = e.target.files[0]
  if (file) {
    console.log("–í–∏–±—Ä–∞–Ω–æ —Ñ–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞:", file.name, file.size, "–±–∞–π—Ç")

    if (file.size > 5 * 1024 * 1024) {
      alert("–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 5MB")
      e.target.value = ""
      return
    }

    const allowedTypes = ["image/jpeg", "image/jpg", "image/png", "image/gif", "image/webp"]
    if (!allowedTypes.includes(file.type)) {
      alert("–î–æ–∑–≤–æ–ª–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (JPEG, PNG, GIF, WebP)")
      e.target.value = ""
      return
    }

    avatarFile = file
    const reader = new FileReader()
    reader.onload = (e) => {
      console.log("–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ –∞–≤–∞—Ç–∞—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
      document.getElementById("avatarPreview").innerHTML = `<img src="${e.target.result}" alt="Avatar">`
    }
    reader.onerror = (error) => {
      console.error("–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É:", error)
      alert("–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É")
    }
    reader.readAsDataURL(file)
  }
})

document.getElementById("profileForm").addEventListener("submit", async (e) => {
  e.preventDefault()

  const messageDiv = document.getElementById("profileMessage")
  messageDiv.style.display = "none"

  console.log("=== –ü–æ—á–∞—Ç–æ–∫ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é ===")
  console.log("–§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:", avatarFile ? avatarFile.name : "–Ω–µ–º–∞—î")

  const formData = new FormData()
  formData.append("userId", userId)
  formData.append("firstName", document.getElementById("firstName").value.trim())
  formData.append("lastName", document.getElementById("lastName").value.trim())
  formData.append("middleName", document.getElementById("middleName").value.trim())
  formData.append("telegram", document.getElementById("telegram").value.trim())
  formData.append("phone", document.getElementById("phone").value.trim())
  formData.append("birthDate", document.getElementById("birthDate").value)
  formData.append("city", document.getElementById("city").value.trim())
  formData.append("school", document.getElementById("school").value.trim())
  formData.append("grade", document.getElementById("grade").value.trim())
  formData.append("interests", document.getElementById("interests").value.trim())
  formData.append("bio", document.getElementById("bio").value.trim())

  if (avatarFile) {
    formData.append("avatar", avatarFile)
    console.log("–ê–≤–∞—Ç–∞—Ä –¥–æ–¥–∞–Ω–æ –¥–æ FormData")
  }

  try {
    console.log("–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
    const response = await fetch(`${BASE_URL}/api/profile`, {
      method: "POST",
      body: formData,
    })

    console.log("–°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:", response.status)
    const data = await response.json()
    console.log("–î–∞–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:", data)

    if (response.ok) {
      messageDiv.textContent = "–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!"
      messageDiv.className = "message success"
      messageDiv.style.display = "block"

      avatarFile = null
      document.getElementById("avatarInput").value = ""

      console.log("–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...")
      setTimeout(async () => {
        await loadProfile()
      }, 500)

      setTimeout(() => {
        messageDiv.style.display = "none"
      }, 3000)
    } else {
      messageDiv.textContent = data.error || "–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é"
      messageDiv.className = "message error"
      messageDiv.style.display = "block"
    }
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:", error)
    messageDiv.textContent = "–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º"
    messageDiv.className = "message error"
    messageDiv.style.display = "block"
  }

  console.log("=== –ö—ñ–Ω–µ—Ü—å –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é ===")
})

loadProfile()