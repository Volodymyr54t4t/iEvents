// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
const userId = localStorage.getItem("userId")

if (!userId) {
    window.location.href = "auth.html"
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω–∫—É—Ä—Å—ñ–≤ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener("DOMContentLoaded", () => {
    loadMyCompetitions()
})

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω–∫—É—Ä—Å—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async function loadMyCompetitions() {
    try {
        const response = await fetch(`http://localhost:3000/api/competitions/my/${userId}`)
        const data = await response.json()

        if (response.ok) {
            const active = data.competitions.filter((c) => c.status === "–∞–∫—Ç–∏–≤–Ω–∏–π")
            const upcoming = data.competitions.filter((c) => c.status === "–º–∞–π–±—É—Ç–Ω—ñ–π")
            const inactive = data.competitions.filter((c) => c.status === "–Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π")

            displayCompetitions("activeCompetitions", active, "active")
            displayCompetitions("upcomingCompetitions", upcoming, "upcoming")
            displayCompetitions("inactiveCompetitions", inactive, "inactive")
        } else {
            console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω–∫—É—Ä—Å—ñ–≤:", data.error)
            showError("activeCompetitions")
            showError("upcomingCompetitions")
            showError("inactiveCompetitions")
        }
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞:", error)
        showError("activeCompetitions")
        showError("upcomingCompetitions")
        showError("inactiveCompetitions")
    }
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–Ω–∫—É—Ä—Å—ñ–≤
function displayCompetitions(containerId, competitions, type) {
    const container = document.getElementById(containerId)

    if (competitions.length === 0) {
        let message = ""
        if (type === "active") {
            message = "–ù–∞—Ä–∞–∑—ñ —É –≤–∞—Å –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ–Ω–∫—É—Ä—Å—ñ–≤"
        } else if (type === "upcoming") {
            message = "–ù–∞—Ä–∞–∑—ñ —É –≤–∞—Å –Ω–µ–º–∞—î –º–∞–π–±—É—Ç–Ω—ñ—Ö –∫–æ–Ω–∫—É—Ä—Å—ñ–≤"
        } else {
            message = "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∫–æ–Ω–∫—É—Ä—Å—ñ–≤"
        }

        container.innerHTML = `
      <div class="empty-state">
        <h3>${message}</h3>
        <p>–û—á—ñ–∫—É–π—Ç–µ, –ø–æ–∫–∏ –≤–∏–∫–ª–∞–¥–∞—á –¥–æ–¥–∞—Å—Ç—å –≤–∞—Å –Ω–∞ –∫–æ–Ω–∫—É—Ä—Å</p>
      </div>
    `
        return
    }

    container.innerHTML = competitions
        .map((competition) => {
            const startDate = new Date(competition.start_date)
            const endDate = new Date(competition.end_date)
            const today = new Date()

            let statusText = ""
            let statusClass = ""
            let daysInfo = ""

            if (type === "active") {
                statusText = "–ê–∫—Ç–∏–≤–Ω–∏–π"
                statusClass = "active"
                const daysLeft = Math.ceil((endDate - today) / (1000 * 60 * 60 * 24))
                if (daysLeft > 0) {
                    daysInfo = `<div class="days-remaining">–ó–∞–ª–∏—à–∏–ª–æ—Å—å –¥–Ω—ñ–≤: ${daysLeft}</div>`
                }
            } else if (type === "upcoming") {
                statusText = "–ú–∞–π–±—É—Ç–Ω—ñ–π"
                statusClass = "upcoming"
                const daysUntil = Math.ceil((startDate - today) / (1000 * 60 * 60 * 24))
                if (daysUntil > 0) {
                    daysInfo = `<div class="days-remaining">–ü–æ—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ ${daysUntil} –¥–Ω—ñ–≤</div>`
                }
            } else {
                statusText = "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
                statusClass = "inactive"
            }

            return `
        <div class="competition-card ${statusClass}">
          <h3 class="competition-title">${competition.title}</h3>
          <span class="status-badge status-${statusClass}">${statusText}</span>
          ${competition.description ? `<p class="competition-description">${competition.description}</p>` : ""}
          <div class="competition-dates">
            <span>üìÖ –ü–æ—á–∞—Ç–æ–∫: ${startDate.toLocaleDateString("uk-UA")}</span>
            <span>üìÖ –ó–∞–∫—ñ–Ω—á–µ–Ω–Ω—è: ${endDate.toLocaleDateString("uk-UA")}</span>
          </div>
          ${daysInfo}
        </div>
      `
        })
        .join("")
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
function showError(containerId) {
    const container = document.getElementById(containerId)
    container.innerHTML = `
    <div class="empty-state">
      <h3>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h3>
      <p>–°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É</p>
    </div>
  `
}